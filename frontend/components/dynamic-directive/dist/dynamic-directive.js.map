{"version":3,"sources":["src/dynamic-directive.js"],"names":[],"mappings":"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","file":"src/dynamic-directive.js","sourcesContent":["'use strict';\n\n(function(angular) {\n\n  var uniqueId = 0;\n  const DEFAULT_PRIORITY = 0;\n\n  class DynamicDirective {\n\n    constructor(injectionFunction, name, options) {\n      if (!name) {\n        throw new Error('DynamicInjection: name argument should be a string');\n      }\n      this.name = name;\n\n      if (injectionFunction === true) {\n        injectionFunction = function() { return true; };\n      } else if (!injectionFunction || !angular.isFunction(injectionFunction)) {\n        throw new Error('DynamicInjection: injectionFunction argument should be a function');\n      }\n      this.injectionFunction = injectionFunction;\n      options = options || {};\n      this.attributes = options.attributes || [];\n      this.scope = options.scope || undefined;\n      this.priority = !isNaN(parseInt(options.priority, 10)) ? parseInt(options.priority, 10) : DEFAULT_PRIORITY;\n\n      this._id = ++uniqueId;\n    }\n\n  }\n\n  angular.module('op.dynamicDirective', [])\n  .provider('dynamicDirectiveService', (function() {\n    let injections = {};\n\n    function _dynamicDirectivesSortByName(a, b, onEquality) {\n      if (b.name < a.name) {\n        return -1;\n      } else if (b.name > a.name) {\n        return 1;\n      } else {\n        return onEquality(a, b);\n      }\n    }\n\n    function _dynamicDirectivesSortByid(a, b) {\n      if (b._id < a._id) {\n        return -1;\n      } else if (b._id > a._id) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n\n    function _dynamicDirectivesSort(a, b) {\n      var prio = b.priority - a.priority;\n      if (prio !== 0) {\n        return prio;\n      }\n      if (b.name < a.name) {\n        return -1;\n      } else if (b.name > a.name) {\n        return 1;\n      } else {\n        return _dynamicDirectivesSortByName(a, b, _dynamicDirectivesSortByid);\n      }\n    }\n\n    function _ensureInjectionsArray(anchorName) {\n      injections[anchorName] = injections[anchorName] || [];\n    }\n\n    function getInjections(anchorName, scope) {\n      _ensureInjectionsArray(anchorName);\n      let ia = injections[anchorName];\n      return ia.filter((da) => da.injectionFunction(scope));\n    }\n\n    function addInjection(anchorName, da) {\n      _ensureInjectionsArray(anchorName);\n      injections[anchorName].push(da);\n    }\n\n    function resetInjections(anchorName) {\n      injections[anchorName] = [];\n    }\n\n    function orderInjections(injections) {\n      injections.sort(_dynamicDirectivesSort);\n      return injections;\n    }\n\n    return {\n      addInjection: addInjection,\n      DynamicDirective: DynamicDirective,\n      $get: ['$rootScope', function($rootScope) {\n        return {\n          DynamicDirective: DynamicDirective,\n          getInjections: getInjections,\n          sort: orderInjections,\n          addInjection: function(anchorName, da) {\n            addInjection(anchorName, da);\n            $rootScope.$broadcast('dynamicDirectiveInjectionUpdated', anchorName, da);\n          },\n          resetInjections: function(anchorName) {\n            resetInjections(anchorName);\n            $rootScope.$broadcast('dynamicDirectiveInjectionUpdated', anchorName);\n          }\n        };\n      }]\n    };\n  })())\n  .value('DynamicDirective', DynamicDirective)\n  .directive('dynamicDirective', ['$compile', 'dynamicDirectiveService', function($compile, dynamicDirectiveService) {\n\n    const DYNAMIC_DIRECTIVE_ID = 'dynamic-directive-id';\n\n    function orderDirectives(element, dynamicDirectives) {\n      let orderedIds = dynamicDirectiveService.sort(dynamicDirectives).map((d) => d._id);\n      let domIds = element.children('[' + DYNAMIC_DIRECTIVE_ID + ']')\n                    .map((index, e) => parseInt(angular.element(e).attr(DYNAMIC_DIRECTIVE_ID), 10))\n                    .toArray();\n      // 99% of the time\n      if (orderedIds.join(',') === domIds.join(',')) {\n        return;\n      }\n\n      for (let i = 0, len = orderedIds.length - 2; i <= len; i++) {\n        let current = orderedIds[i], next = orderedIds[(i + 1)],\n            $current = element.children('[' + DYNAMIC_DIRECTIVE_ID + '=' + current + ']');\n        if ($current.next().attr(DYNAMIC_DIRECTIVE_ID) !== next) {\n          element.children('[' + DYNAMIC_DIRECTIVE_ID + '=' + next + ']').insertAfter($current);\n        }\n      }\n    }\n\n    function link(scope, element, attrs) {\n      function appendDirective(dynamicDirective) {\n        let template = angular.element(buildHtmlFromInjectionData(dynamicDirective));\n        let newElt = $compile(template)(dynamicDirective.scope || scope);\n        element.append(newElt);\n      }\n\n      function buildHtmlFromInjectionData(dynamicDirective) {\n        let attributes = {};\n        attributes[DYNAMIC_DIRECTIVE_ID] = dynamicDirective._id;\n        dynamicDirective.attributes.forEach((attribute) => attributes[attribute.name] = attribute.value);\n        let e = angular.element('<' + dynamicDirective.name + '/>');\n        e.attr(attributes);\n        return e;\n      }\n\n      function fixVisibility() {\n        if (element.children().length) {\n          element.show();\n        } else {\n          element.hide();\n        }\n      }\n\n      let anchorName = attrs.dynamicDirective;\n      element.hide();\n\n      let dynamicDirectives = dynamicDirectiveService.sort(dynamicDirectiveService.getInjections(anchorName, scope));\n\n      dynamicDirectives.forEach(appendDirective);\n      fixVisibility();\n\n      scope.$on('dynamicDirectiveInjectionUpdated', function(evt, name) {\n        if (name !== anchorName) {\n          return;\n        }\n        let dynamicDirectives = dynamicDirectiveService.sort(dynamicDirectiveService.getInjections(anchorName, scope));\n        let dIds = {}, currentIds = {};\n        dynamicDirectives.forEach((d) => dIds[d._id] = d);\n\n        element.children().each((index, elt) => {\n          let $e = angular.element(elt), directiveId = $e.attr(DYNAMIC_DIRECTIVE_ID);\n          if (!directiveId) {\n            return;\n          }\n\n          if (!dIds[directiveId]) {\n            $e.remove();\n            return;\n          }\n          currentIds[directiveId] = true;\n        });\n\n        let dIdsCount = Object.keys(dIds).length, currentIdsCount = Object.keys(currentIds).length;\n        if (dIdsCount !== currentIdsCount) {\n          Object.keys(dIds).forEach((id) => {\n            if (!currentIds[id]) {\n              appendDirective(dIds[id]);\n            }\n          });\n        }\n        orderDirectives(element, dynamicDirectives);\n        fixVisibility();\n      });\n    }\n\n    return {\n      restrict: 'A',\n      link: link\n    };\n  }]);\n})(angular);\n"]}